{"version":3,"file":"static/js/684.01d74361.chunk.js","mappings":"4HAKA,IALc,SAAHA,GAAiB,IAAZC,EAAKD,EAALC,MACd,OAAIA,GAAcC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,QAAOC,SAAA,CAAC,UAAQH,KACnC,EACd,C,+CCEA,IAFgB,WAAH,OAASI,EAAAA,EAAAA,YAAWC,EAAAA,EAAa,C,2HC0E9C,UArEmB,SAACC,GAClB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KAEFE,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAcD,EAAAA,EAAAA,QAAO,MAE3BE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCZ,EAAKc,EAAA,GAAEE,EAAQF,EAAA,GAuBtB,OAAIP,GAAaU,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,CAAEC,SAAU,iBAGzCnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBc,EAAAA,EAAAA,KAAA,MAAAd,SAAI,YACJF,EAAAA,EAAAA,MAACoB,EAAAA,EAAI,CAACC,SAzBK,SAACC,GACdA,EAAEC,iBAEF,IAAMC,GAAOC,EAAAA,EAAAA,OACbC,EAAAA,EAAAA,IACEF,EACAhB,EAASmB,QAAQC,MACjBlB,EAAYiB,QAAQC,OAEnBC,MAAK,SAACC,GAELC,QAAQC,IAAI,WACZD,QAAQC,IAAIF,EAAexB,KAC7B,IACC2B,OAAM,SAACC,GACNnB,EAASmB,EAAIC,SACbJ,QAAQC,IAAIE,EAAIC,QAClB,GACJ,EAO2BjC,SAAA,EACrBF,EAAAA,EAAAA,MAACoB,EAAAA,EAAKgB,MAAK,CAACnC,UAAU,OAAMC,SAAA,EAC1Bc,EAAAA,EAAAA,KAACI,EAAAA,EAAKiB,MAAK,CAAAnC,SAAC,WACZc,EAAAA,EAAAA,KAACI,EAAAA,EAAKkB,QAAO,CACXC,UAAQ,EACRC,IAAKhC,EACLiC,KAAK,QACLC,YAAY,iBAEd1B,EAAAA,EAAAA,KAACI,EAAAA,EAAKuB,KAAI,CAAC1C,UAAU,aAAYC,SAAC,uDAKpCF,EAAAA,EAAAA,MAACoB,EAAAA,EAAKgB,MAAK,CAACnC,UAAU,OAAO2C,UAAU,oBAAmB1C,SAAA,EACxDc,EAAAA,EAAAA,KAACI,EAAAA,EAAKiB,MAAK,CAAAnC,SAAC,cACZc,EAAAA,EAAAA,KAACI,EAAAA,EAAKkB,QAAO,CACXC,UAAQ,EACRC,IAAK9B,EACL+B,KAAK,WACLC,YAAY,gBAGf3C,IAASiB,EAAAA,EAAAA,KAAC6B,EAAAA,EAAK,CAAC9C,MAAOA,KACxBiB,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACC,QAAQ,UAAUN,KAAK,SAAQvC,SAAC,eAI1CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,WAAUC,SAAA,CAAC,6BACGc,EAAAA,EAAAA,KAAA,KAAGgC,KAAK,IAAG9C,SAAC,+BAI7C,C","sources":["components/Error.js","hook/useAuth.js","views/SignupView/index.js"],"sourcesContent":["const Error = ({error}) => {\r\n  if (error) return <p className=\"error\">Error: {error}</p>;\r\n  else return \"\";\r\n};\r\n\r\nexport default Error;\r\n","import { useContext } from 'react';\r\nimport AuthContext from '../context/FirebaseAuthContext';\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport default useAuth;\r\n","import { useState, useRef } from \"react\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport useAuth from \"../../hook/useAuth\";\r\nimport Error from \"../../components/Error\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst SignupView = (props) => {\r\n  const { user } = useAuth();\r\n\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  //this is our config for FirebaseAuth\r\n  const signup = (e) => {\r\n    e.preventDefault();\r\n\r\n    const auth = getAuth();\r\n    createUserWithEmailAndPassword(\r\n      auth,\r\n      emailRef.current.value,\r\n      passwordRef.current.value\r\n    )\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        console.log(\"success\");\r\n        console.log(userCredential.user);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  if (user) return <Navigate to={{ pathname: \"/dashboard\" }} />;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Signup</h1>\r\n      <Form onSubmit={signup}>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            required\r\n            ref={emailRef}\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            ref={passwordRef}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        </Form.Group>\r\n        {error && <Error error={error} />}\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <p className=\"reminder\">\r\n        Already have an account? <a href=\"/\">Click here to sign in</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupView;\r\n"],"names":["_ref","error","_jsxs","className","children","useContext","AuthContext","props","user","useAuth","emailRef","useRef","passwordRef","_useState","useState","_useState2","_slicedToArray","setError","_jsx","Navigate","to","pathname","Form","onSubmit","e","preventDefault","auth","getAuth","createUserWithEmailAndPassword","current","value","then","userCredential","console","log","catch","err","message","Group","Label","Control","required","ref","type","placeholder","Text","controlId","Error","Button","variant","href"],"sourceRoot":""}