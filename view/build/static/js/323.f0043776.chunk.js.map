{"version":3,"file":"static/js/323.f0043776.chunk.js","mappings":"4HAKA,IALc,SAAHA,GAAiB,IAAZC,EAAKD,EAALC,MACd,OAAIA,GAAcC,EAAAA,EAAAA,MAAA,KAAGC,UAAU,QAAOC,SAAA,CAAC,UAAQH,KACnC,EACd,C,+CCEA,IAFgB,WAAH,OAASI,EAAAA,EAAAA,YAAWC,EAAAA,EAAa,C,iKCAxCC,EAAS,SAAHP,GAA2C,IAArCQ,EAAKR,EAALQ,MAAOC,EAAKT,EAALS,MAAOC,EAAOV,EAAPU,QAASC,EAAMX,EAANW,OACvC,OACET,EAAAA,EAAAA,MAAA,UAAQC,UAAU,SAAQC,SAAA,EACxBQ,EAAAA,EAAAA,KAAA,MAAAR,SAAKI,KACLI,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASN,EAAML,SACtCM,EAAU,QAAU,SAEvBE,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAAS,kBAAMJ,GAAQ,EAACP,SAAC,aAKzD,EAEAG,EAAOS,aAAe,CACpBR,MAAO,cAaT,QCvBA,EARe,WACb,OACEI,EAAAA,EAAAA,KAAA,UAAAR,UACEQ,EAAAA,EAAAA,KAAA,KAAAR,SAAG,yBAGT,E,UCeA,EAnBa,SAAHJ,GAAsC,IAAhCiB,EAAIjB,EAAJiB,KAAMC,EAAQlB,EAARkB,SAAUC,EAAQnB,EAARmB,SAE9B,OACEjB,EAAAA,EAAAA,MAAA,OACEC,UAAS,QAAAiB,OAAUH,EAAKI,UAAY,YACpCC,cAAe,kBAAMH,EAASF,EAAKM,GAAIN,EAAKI,SAAS,EAACjB,SAAA,EAEtDF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGa,EAAKO,KAAM,KACZZ,EAAAA,EAAAA,KAACa,EAAAA,IAAO,CACNC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,WAC/Bb,QAAS,kBAAMG,EAASD,EAAKM,GAAG,QAGpCX,EAAAA,EAAAA,KAAA,KAAAR,SAAIa,EAAKY,QAGf,ECPA,EAVc,SAAH7B,GAAuC,IAAjC8B,EAAK9B,EAAL8B,MAAOZ,EAAQlB,EAARkB,SAAUC,EAAQnB,EAARmB,SAChC,OACEP,EAAAA,EAAAA,KAAA,OAAKT,UAAU,QAAOC,SACnB0B,EAAMC,KAAI,SAACd,EAAMe,GAAK,OACrBpB,EAAAA,EAAAA,KAACqB,EAAI,CAAahB,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAjDa,EAA6D,KAIhF,E,UCqDA,EA3DgB,SAAHhC,GAAmB,IAAbS,EAAKT,EAALS,MACjByB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BV,EAAIY,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAsBJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA3BV,EAAGW,EAAA,GAAEC,EAAMD,EAAA,GAClBE,GAAgCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAxCrB,EAAQsB,EAAA,GAAEC,EAAWD,EAAA,GAiB5B,OACE/B,EAAAA,EAAAA,KAAAiC,EAAAA,SAAA,CAAAzC,UACEF,EAAAA,EAAAA,MAAC4C,EAAAA,EAAI,CAACC,SAjBO,SAACC,GAChBA,EAAEC,iBAEGzB,GAKLf,EAAM,CAAEe,KAAAA,EAAMK,IAAAA,EAAKR,SAAAA,IAEnBiB,EAAQ,IACRG,EAAO,IACPG,GAAY,IARVM,MAAM,oBASV,EAI6B9C,SAAA,EACvBF,EAAAA,EAAAA,MAAC4C,EAAAA,EAAKK,MAAK,CAAChD,UAAU,OAAOiD,UAAU,iBAAgBhD,SAAA,EACrDQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAKO,MAAK,CAAAjD,SAAC,UACZQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAKQ,QAAO,CACXC,KAAK,OACLC,YAAY,WACZC,MAAOjC,EACPkC,SAAU,SAACV,GAAC,OAAKV,EAAQU,EAAEW,OAAOF,MAAM,QAI5CvD,EAAAA,EAAAA,MAAC4C,EAAAA,EAAKK,MAAK,CAAChD,UAAU,OAAOiD,UAAU,oBAAmBhD,SAAA,EACxDQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAKO,MAAK,CAAAjD,SAAC,gBACZQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAKQ,QAAO,CACXC,KAAK,OACLC,YAAY,iBACZC,MAAO5B,EACP6B,SAAU,SAACV,GAAC,OAAKP,EAAOO,EAAEW,OAAOF,MAAM,QAG3C7C,EAAAA,EAAAA,KAACkC,EAAAA,EAAKK,MAAK,CAAChD,UAAU,OAAOiD,UAAU,oBAAmBhD,UACxDQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAKc,MAAK,CACTC,MAAM,eACNN,KAAK,WACLO,QAASzC,EACToC,MAAOpC,EACPqC,SAAU,SAACV,GAAC,OAAKJ,EAAYI,EAAEe,cAAcD,QAAQ,OAGzDlD,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,UAAUyC,KAAK,SAAQnD,SAAC,eAMhD,E,UC9CA,EAbwB,WACtB,IAAM4D,GAAYC,EAAAA,EAAAA,SAAO,GASzB,OAPAC,EAAAA,EAAAA,YACE,kBAAM,WACJF,EAAUG,SAAU,CACtB,CAAC,GACD,IAGKH,CACT,E,UC6JA,EAhKkB,WAChB,IAAAI,GAAyBC,EAAAA,EAAAA,KAAjBC,EAAIF,EAAJE,KAAM3D,EAAMyD,EAANzD,OACR4D,EAAeC,IAErBtC,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCjC,EAAKmC,EAAA,GAAEqC,EAAQrC,EAAA,GAEtBG,GAAsCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA9CmC,EAAWlC,EAAA,GAAEmC,EAAcnC,EAAA,GAClCE,GAA0BP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA/BZ,EAAKa,EAAA,GAAEiC,EAAQjC,EAAA,GAGhBkC,EAAgB,eAAA7E,GAAA8E,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACHlB,EAAKmB,aAAa,KAAD,EAClB,OADbP,EAAKI,EAAAI,KACXC,QAAQC,IAAIV,GAAOI,EAAAE,KAAA,EACDK,MAChB,kEACA,CACEC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD5E,OAAY8D,MAG7B,KAAD,EATQ,OAAHC,EAAGG,EAAAI,KAAAJ,EAAAE,KAAA,EAWUL,EAAIc,OAAO,KAAD,EAAnB,OAAJb,EAAIE,EAAAI,KAAAJ,EAAAY,OAAA,SAEHd,EAAKe,QAAM,yBAAAb,EAAAc,OAAA,GAAAnB,EAAA,KACnB,kBAjBqB,OAAAjF,EAAAqG,MAAA,KAAAC,UAAA,MAoBtBpC,EAAAA,EAAAA,YAAU,WACR,IAAMqC,EAAQ,eAAAC,GAAA1B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,IAAA,IAAAC,EAAA,OAAA3B,EAAAA,EAAAA,KAAAM,MAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAApB,KAAA,EAAAoB,EAAAnB,KAAA,EAEiBX,IAAmB,KAAD,EAA1C6B,EAAeC,EAAAjB,KACjBnB,EAAaJ,SAASS,EAAS8B,GAAiBC,EAAAnB,KAAA,gBAAAmB,EAAApB,KAAA,EAAAoB,EAAAC,GAAAD,EAAA,SAEpDlC,EAASkC,EAAAC,GAAIC,SAAS,yBAAAF,EAAAP,OAAA,GAAAK,EAAA,kBAEzB,kBAPa,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KASdC,GACF,GAAG,IAGH,IAAMO,EAAa,eAAAC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAgC,EAAO/F,GAAI,IAAAiE,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACXlB,EAAKmB,aAAa,KAAD,EAA1B,OAALP,EAAK+B,EAAAvB,KAAAuB,EAAAzB,KAAA,EACOK,MAChB,kEACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD5E,OAAY8D,IAE3BgC,KAAMC,KAAKC,UAAU,CAAEnG,KAAMA,MAE/B,KAAD,EAVQ,OAAHkE,EAAG8B,EAAAvB,KAAAuB,EAAAzB,KAAA,EAWUL,EAAIc,OAAO,KAAD,EACJ,OADnBb,EAAI6B,EAAAvB,KACVC,QAAQC,IAAIR,EAAKe,QAAQc,EAAAf,OAAA,SAClBd,EAAKe,QAAM,yBAAAc,EAAAb,OAAA,GAAAY,EAAA,KACnB,gBAhBkBK,GAAA,OAAAN,EAAAV,MAAA,KAAAC,UAAA,KAmBbgB,EAAO,eAAAC,GAAAzC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAwC,EAAOvG,GAAI,IAAAmE,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAEJsB,EAAc7F,GAAM,KAAD,EAAhCmE,EAAIqC,EAAA/B,KACVd,EAAS,GAADxD,QAAAsG,EAAAA,EAAAA,GAAK5F,GAAK,CAAEsD,KAAOqC,EAAAjC,KAAA,gBAAAiC,EAAAlC,KAAA,EAAAkC,EAAAb,GAAAa,EAAA,SAE3BhD,EAASgD,EAAAb,GAAIC,SAAS,yBAAAY,EAAArB,OAAA,GAAAoB,EAAA,kBAEzB,gBAPYG,GAAA,OAAAJ,EAAAlB,MAAA,KAAAC,UAAA,KAUPsB,EAAgB,eAAAC,GAAA/C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8C,EAAOvG,GAAE,IAAA2D,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAM,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACZlB,EAAKmB,aAAa,KAAD,EAA1B,OAALP,EAAK6C,EAAArC,KAAAqC,EAAAvC,KAAA,EACOK,MAAM,mEAADzE,OAC8CG,GACnE,CACEuE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD5E,OAAY8D,MAG7B,KAAD,EATQ,OAAHC,EAAG4C,EAAArC,KAAAqC,EAAA7B,OAAA,SAUFf,EAAI6C,QAAM,wBAAAD,EAAA3B,OAAA,GAAA0B,EAAA,KAClB,gBAbqBG,GAAA,OAAAJ,EAAAxB,MAAA,KAAAC,UAAA,KAgBhB4B,EAAU,eAAAC,GAAArD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoD,EAAO7G,GAAE,OAAAwD,EAAAA,EAAAA,KAAAM,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA9C,KAAA,EAAA8C,EAAA7C,KAAA,EAEHoC,EAAiBrG,GAAI,KAAD,EAA7B,GAEG,MAFH8G,EAAA3C,KAEM,CAAA2C,EAAA7C,KAAA,QAAEZ,EAAS9C,EAAMwG,QAAO,SAACrH,GAAI,OAAKA,EAAKM,KAAOA,CAAE,KAAG8G,EAAA7C,KAAA,qBAC1D,IAAI+C,EAAAA,EAAM,4BAA4B,KAAD,EAAAF,EAAA7C,KAAA,iBAAA6C,EAAA9C,KAAA,GAAA8C,EAAAzB,GAAAyB,EAAA,SAEhD5D,EAAS4D,EAAAzB,GAAIC,SAAS,yBAAAwB,EAAAjC,OAAA,GAAAgC,EAAA,mBAEzB,gBATeI,GAAA,OAAAL,EAAA9B,MAAA,KAAAC,UAAA,KAYVmC,EAAoB,eAAAC,GAAA5D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2D,EAAOpH,EAAIF,GAAQ,IAAA6D,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAApD,KAAA,EAC1BlB,EAAKmB,aAAa,KAAD,EAA1B,OAALP,EAAK0D,EAAAlD,KAAAkD,EAAApD,KAAA,EACOK,MAAM,mEAADzE,OAC8CG,GACnE,CACEuE,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD5E,OAAY8D,IAE3BgC,KAAMC,KAAKC,UAAU,CAAE/F,UAAWA,MAEpC,KAAD,EAVQ,OAAH8D,EAAGyD,EAAAlD,KAAAkD,EAAApD,KAAA,EAYUL,EAAIc,OAAO,KAAD,EAAnB,OAAJb,EAAIwD,EAAAlD,KAAAkD,EAAA1C,OAAA,SACHd,EAAKe,QAAM,yBAAAyC,EAAAxC,OAAA,GAAAuC,EAAA,KACnB,gBAhByBE,EAAAC,GAAA,OAAAJ,EAAArC,MAAA,KAAAC,UAAA,KAmBpByC,EAAc,eAAAC,GAAAlE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiE,EAAO1H,EAAIF,GAAQ,IAAA+D,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,cAAA0D,EAAA3D,KAAA,EAAA2D,EAAA1D,KAAA,EAEnBiD,EAAqBlH,EAAIF,GAAU,KAAD,EAA/C+D,EAAI8D,EAAAxD,KAEVd,EACE9C,EAAMC,KAAI,SAACd,GAAI,OACbA,EAAKM,KAAOA,GAAE4H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQlI,GAAI,IAAEI,SAAU+D,EAAK/D,WAAaJ,CAAI,KAE9DiI,EAAA1D,KAAA,gBAAA0D,EAAA3D,KAAA,EAAA2D,EAAAtC,GAAAsC,EAAA,SAEFzE,EAASyE,EAAAtC,GAAIC,SAAS,yBAAAqC,EAAA9C,OAAA,GAAA6C,EAAA,kBAEzB,gBAZmBG,EAAAC,GAAA,OAAAL,EAAA3C,MAAA,KAAAC,UAAA,KAcpB,OAAa,OAAThC,QAA0BgF,IAAThF,GACZ1D,EAAAA,EAAAA,KAAC2I,EAAAA,GAAQ,CAACC,GAAI,CAAEC,SAAU,QAGjCvJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBQ,EAAAA,EAAAA,KAACL,EAAM,CACLE,MAAO,kBAAMkE,GAAgBD,EAAY,EACzChE,QAASgE,EACT/D,OAAQA,IAGT+D,IAAe9D,EAAAA,EAAAA,KAAC8I,EAAO,CAACjJ,MAAO6G,IAE/BxF,EAAM6H,OAAS,GACd/I,EAAAA,EAAAA,KAACgJ,EAAK,CAAC9H,MAAOA,EAAOZ,SAAUgH,EAAY/G,SAAU4H,IAErD,mBAGD9I,IAASW,EAAAA,EAAAA,KAAC2H,EAAAA,EAAK,CAACtI,MAAOA,KAExBW,EAAAA,EAAAA,KAACiJ,EAAM,MAGb,C","sources":["components/Error.js","hook/useAuth.js","views/DashboardView/components/Header.js","views/DashboardView/components/Footer.js","views/DashboardView/components/Task.js","views/DashboardView/components/Tasks.js","views/DashboardView/components/AddTask.js","hook/useIsMountedRef.js","views/DashboardView/index.js"],"sourcesContent":["const Error = ({error}) => {\r\n  if (error) return <p className=\"error\">Error: {error}</p>;\r\n  else return \"\";\r\n};\r\n\r\nexport default Error;\r\n","import { useContext } from 'react';\r\nimport AuthContext from '../context/FirebaseAuthContext';\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\nexport default useAuth;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Header = ({ title, onAdd, showAdd, logout }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button variant=\"primary\" onClick={onAdd}>\r\n        {showAdd ? \"Close\" : \"Add\"}\r\n      </Button>\r\n      <Button variant=\"primary\" onClick={() => logout()}>\r\n        Logout\r\n      </Button>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"To-do List\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//   color: 'red',\r\n//   backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header;\r\n","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2022</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder && \"reminder\"}`}\r\n      onDoubleClick={() => onToggle(task.id, task.reminder)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <div className=\"tasks\">\r\n      {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Task</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Add task\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Day & Time</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Add Day & Time\"\r\n            value={day}\r\n            onChange={(e) => setDay(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <Form.Check\r\n            label=\"Set Reminder\"\r\n            type=\"checkbox\"\r\n            checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useRef, useEffect } from \"react\";\r\n\r\nconst useIsMountedRef = () => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      isMounted.current = false;\r\n    },\r\n    []\r\n  );\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport useAuth from \"../../hook/useAuth\";\r\nimport useIsMountedRef from \"../../hook/useIsMountedRef\";\r\nimport Error from \"../../components/Error\";\r\n\r\nconst Dashboard = () => {\r\n  const { user, logout } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  // Fetch Tasks\r\n  const fetchTasksServer = async () => {\r\n    const token = await user.getIdToken();\r\n    console.log(token);\r\n    const res = await fetch(\r\n      \"https://us-central1-tasklist-ec855.cloudfunctions.net/api/tasks\",\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    return data.result;\r\n  };\r\n\r\n  // fetch tasks front\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      try {\r\n        const tasksFromServer = await fetchTasksServer();\r\n        if (isMountedRef.current) setTasks(tasksFromServer);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    getTasks();\r\n  }, []);\r\n\r\n  // Add Task server\r\n  const addTaskServer = async (task) => {\r\n    const token = await user.getIdToken();\r\n    const res = await fetch(\r\n      \"https://us-central1-tasklist-ec855.cloudfunctions.net/api/tasks\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ task: task }),\r\n      }\r\n    );\r\n    const data = await res.json();\r\n    console.log(data.result);\r\n    return data.result;\r\n  };\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    try {\r\n      const data = await addTaskServer(task);\r\n      setTasks([...tasks, data]);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Delete Task server\r\n  const deleteTaskServer = async (id) => {\r\n    const token = await user.getIdToken();\r\n    const res = await fetch(\r\n      `https://us-central1-tasklist-ec855.cloudfunctions.net/api/tasks/${id}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    return res.status;\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const status = await deleteTaskServer(id);\r\n\r\n      if (status === 200) setTasks(tasks.filter((task) => task.id !== id));\r\n      else throw new Error(\"Error Deleting This Task\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // update reminder server\r\n  const updateReminderServer = async (id, reminder) => {\r\n    const token = await user.getIdToken();\r\n    const res = await fetch(\r\n      `https://us-central1-tasklist-ec855.cloudfunctions.net/api/tasks/${id}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ reminder: !reminder }),\r\n      }\r\n    );\r\n\r\n    const data = await res.json();\r\n    return data.result;\r\n  };\r\n\r\n  // update reminder\r\n  const updateReminder = async (id, reminder) => {\r\n    try {\r\n      const data = await updateReminderServer(id, reminder);\r\n\r\n      setTasks(\r\n        tasks.map((task) =>\r\n          task.id === id ? { ...task, reminder: data.reminder } : task\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  if (user === null || user === undefined)\r\n    return <Navigate to={{ pathname: \"/\" }} />;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header\r\n        onAdd={() => setShowAddTask(!showAddTask)}\r\n        showAdd={showAddTask}\r\n        logout={logout}\r\n      />\r\n\r\n      {showAddTask && <AddTask onAdd={addTask} />}\r\n\r\n      {tasks.length > 0 ? (\r\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={updateReminder} />\r\n      ) : (\r\n        \"No Tasks To Show\"\r\n      )}\r\n\r\n      {error && <Error error={error} />}\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["_ref","error","_jsxs","className","children","useContext","AuthContext","Header","title","onAdd","showAdd","logout","_jsx","Button","variant","onClick","defaultProps","task","onDelete","onToggle","concat","reminder","onDoubleClick","id","text","FaTimes","style","color","cursor","day","tasks","map","index","Task","_useState","useState","_useState2","_slicedToArray","setText","_useState3","_useState4","setDay","_useState5","_useState6","setReminder","_Fragment","Form","onSubmit","e","preventDefault","alert","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Check","label","checked","currentTarget","isMounted","useRef","useEffect","current","_useAuth","useAuth","user","isMountedRef","useIsMountedRef","setError","showAddTask","setShowAddTask","setTasks","fetchTasksServer","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","res","data","wrap","_context","prev","next","getIdToken","sent","console","log","fetch","method","headers","Authorization","json","abrupt","result","stop","apply","arguments","getTasks","_ref2","_callee2","tasksFromServer","_context2","t0","message","addTaskServer","_ref3","_callee3","_context3","body","JSON","stringify","_x","addTask","_ref4","_callee4","_context4","_toConsumableArray","_x2","deleteTaskServer","_ref5","_callee5","_context5","status","_x3","deleteTask","_ref6","_callee6","_context6","filter","Error","_x4","updateReminderServer","_ref7","_callee7","_context7","_x5","_x6","updateReminder","_ref8","_callee8","_context8","_objectSpread","_x7","_x8","undefined","Navigate","to","pathname","AddTask","length","Tasks","Footer"],"sourceRoot":""}